library(twitteR)
library("ROAuth")
library(dplyr)
library(tidytext)
library(tidyr)
library(tm)
library(topicmodels)
library(ggplot2)
library(magrittr)
library(wordcloud)
library(wordcloud2)
library(igraph)
library(RCurl)
library(RSentiment)
library(syuzhet)

api_key<-"pRHk3XppHVelGhOwTaDEZUt34"
api_secret<-"6VhY98L0ZEZEXivnA86K93hEZSg568E9OsV14Rc9IXEjWTRo3a"
access_token<-"1280191850800795649-GgvPXlmP8fFrJnc7EFDYTwRTMp4qmq"
access_token_secret<"YiJrXUiTZvEsZiLH73Y5WPpy5i8g8ztQWrnSl8uTh5GR6"

setup_twitter_oauth(api_key,api_secret, access_token, access_token_secret)
tweets<-searchTwitter('@amazonIN', n=1000 , lang='en')
tweets
tweetsdf<-twListToDF(tweets)
write.csv(tweetsdf, file = '@amazonIN.csv',row.names = F)
params<-list(minDoFreq=1, removeNumbers=TRUE, stopwords=TRUE, stem=TRUE)
files<-lapply(file.choose(new=FALSE), readLines)
amazonIN<-read.csv(file.choose(), header = T)

str(amazonIN)
amazonIN$text<-as.factor(amazonIN$text)
str(amazonIN)
corpus<-iconv(amazonIN$text, to="utf-8")
corpus<-Corpus(VectorSource(corpus))
inspect(corpus[1:5])
corpus<-tm_map(corpus, tolower)
inspect(corpus[1:5])
corpus<-tm_map(corpus, removePunctuation)
corpus<-tm_map(corpus, removeNumbers)
cleanset<-tm_map(corpus, removeWords, stopwords('english'))
cleanset<-tm_map(cleanset, removeWords, c('rbi',  'uberindia', 'pmoindia', 'prank', 'issue', 'dominosindia', 'scam','RT', 'ohh', 'happen', 'day', 'contest', 'upi', 'netflixindia', 'birthday', 'sorry', 'oyorooms', 'its',  'dont', 'Flipkart',  'cannot', 'shivi',  'simpl', 'thw', 'makemytrip', 'chance',  'uncle', 'still', 'c...', 'hurry up', 'lets', 'soon', 'kind', 'many', 'much', 'deal', 'unless', 'festival', 'just', 'like', 'fraud', 'awww', 'anything', 'cool', 'hello', 'modi','shah', 'hearts', 'without', 'stealing', 'twoth', 'card', 'gift', 'will', 'now', 'is', 'am', 'are', 'were', 'was', 'the', 'there', 'them', 'then', 'can', 'scam', 'fake', 'friend', 'corrupt', 'lie', 'truth', 'spam', 'transactâ€¦ ', 'biggest', 'nooo', 'amp', 'chachu', 'tweet', 'phone', 'hack','company', 'running', 'great', 'biggest', 'good', 'saakk', 'season', 'thankyou', 'hope',))
removeURL<-function(x) gsub ('http[[:alnum:]]*', '', x)
cleanset<-tm_map(cleanset, content_transformer(removeURL))
cleanset<-tm_map(cleanset, stripWhitespace)
#Term document matrix
tdm <- TermDocumentMatrix(cleanset)
tdm <- as.matrix(tdm)
tdm <- tdm[rowSums(tdm)>30,]
tdm[1:10, 1:10]
#Network of terms
tdm[tdm>1] <- 1
termM <- tdm %*% t(tdm)
termM[1:10,1:10]
g <- graph.adjacency(termM,mode = 'undirected')
g
g <- simplify(g)

V(g)$label <- V(g)$name
V(g)$degree <- degree(g)

#Histogram of node degree
hist(V(g)$degree,
     breaks = 100,
     col = 'green',
     main = 'Histogram of Node Degree',
     ylab = 'Frequency',
     xlab = 'Degree of Vertices')

#Network diagram
set.seed(222)
plot(g)
plot(g,
     vertex.color='green',
     vertex.size = 4,
     vertex.label.dist = 1.5,
     vertex.label = NA)

#Community detection
comm <- cluster_edge_betweenness(g)
plot(comm, g)

prop <- cluster_label_prop(g)
plot(prop, g)

greed <- cluster_fast_greedy(as.undirected(g))
plot(greed, as.undirected(g))

#Hub and authorities
hs <- hub_score(g, weights = NA)$vector
as <- authority_score(g, weights=NA)$vector
par(mfrow=c(1,2))
plot(g, vertex.size=hs*30, main='Hubs',
     vertex.label=NA,
     vertex.color=rainbow(50))
plot(g, vertex.size=as*30, main='Authorities',
     vertex.label=NA,
     vertex.color=rainbow(50))

# Highlighting degrees
V(g)$label.cex <- 2.2*V(g)$degree / max(V(g)$degree) + 0.3
V(g)$label.color <- rgb(0, 0, .2, .8)
V(g)$frame.color <- NA
egam <- (log(E(g)$weight)+.4) / max(log(E(g)$weight)+ .4)
E(g)$color <- rgb(.5, .5, 0, egam)
E(g)$width <- egam
plot(g,
     vertex.color='green',
     vertex.size = V(g)$degree*.5)

#Network of tweets
tweetM <- t(tdm) %*% tdm
g <- graph.adjacency(tweetM, mode = 'undirected')
V(g)$degree <- degree(g)
g <- simplify(g)
hist(V(g)$degree,
     breaks = 100,
     col = 'green',
     main = 'Histogram of Degree',
     ylab = 'Frequency',
     xlab = 'Degree')

#Set labels of vertices to tweet IDs
V(g)$label <- V(g)$name
V(g)$label.cex <- 1
V(g)$label.color <- rgb(.4, 0, 0, .7)
V(g)$size <- 4
V(g)$frame.color <- NA
plot(g, vertex.label=NA, vertex.size=6)

#Delete vertices
egam <- (log(E(g)$weight)+.2)/ max(log(E(g)$weight)+ .2)
E(g)$color <- rgb(.5, .5, 0, egam)
E(g)$width <- egam
g2 <- delete.vertices(g, V(g)[degree(g)<50])
plot(g2,
     vertex.label.cex = .9,
     vertex.label.color = 'black')

# Delete edges
E(g)$color <- rgb(.5, .5, 0, egam)
E(g)$width <- egam
g3 <- delete.edges(g, E(g)$weight <- 1)
g3 <- delete.vertices(g3, V(g3)[degree(g3)<20])
plot(g3)
